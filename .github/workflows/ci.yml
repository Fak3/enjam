name: Tests

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"

concurrency:
  group: ${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  Testing:
    env:
      PYTHONDEVMODE: 1
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
          # A specific version to download, may also be "release" or a specific version
          # like "6.1.0". At the moment semver specifiers (i.e. >=6.1.0) are supported
          # only on Windows, on other platforms they are allowed but version is matched
          # exactly regardless.
          ffmpeg-version: release
          # Target architecture of the ffmpeg executable to install. Defaults to the
          # system architecture. Only x64 and arm64 are supported (arm64 only on Linux).
          architecture: 'x64'
          # Linking type of the binaries. Use "shared" to download shared binaries and
          # "static" for statically linked ones. Shared builds are currently only available
          # for windows releases. Defaults to "static"
          linking-type: static
      - name: Setup Python Versions
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.11
            3.12
        if: matrix.os != 'macos-latest'
      - name: Setup Python Versions
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.11
            3.12
        if: matrix.os == 'macos-latest'
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          allow-prereleases: true

      - name: Cache venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pdm.lock') }}
      - name: Install PDM via pip
        run: python -m pip install pdm

      - name: Install Dev Dependencies
        run: |
          pdm install -v -dGtest
          pdm run pip install -U setuptools
          pdm info
      - name: Run Tests
        run: pdm run pytest -n auto
